[{"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\index.tsx":"1","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\configureClient.ts":"2","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\DataContainer.tsx":"3","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\behaviour\\usePersistedState.ts":"4","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\ChampsQuery.ts":"5","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\App.tsx":"6","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SplashScreen.tsx":"7","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\types.ts":"8","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\SelectChampMutation.ts":"9","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\behaviour\\useRoleState.tsx":"10","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SplashImage.tsx":"11","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\EmptyLane.tsx":"12","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\ConfirmedPanel.tsx":"13","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\HextechChestAvailable.tsx":"14","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SingleBarChart.tsx":"15","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\BuildPreview.tsx":"16","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\DifficultyBar.tsx":"17","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\SkinSelect\\SkinSelect.tsx":"18","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\util\\index.tsx":"19","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\SkinSelect\\Skin.tsx":"20","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\theme.ts":"21","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\ChampCountFragment.ts":"22","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\ChampFragment.ts":"23","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\scores\\Scores.tsx":"24","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\scores\\CircleScore.tsx":"25","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\scores\\ScoreHint.tsx":"26","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ModalButton.tsx":"27","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SummonerProfile\\SummonerProfile.tsx":"28","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SummonerProfile\\Profile.tsx":"29","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SummonerProfile\\LoginSummonerName.tsx":"30","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\Filter.tsx":"31"},{"size":564,"mtime":1608813506562,"results":"32","hashOfConfig":"33"},{"size":234,"mtime":1605377794541,"results":"34","hashOfConfig":"33"},{"size":1038,"mtime":1610476840266,"results":"35","hashOfConfig":"33"},{"size":1282,"mtime":1610477019775,"results":"36","hashOfConfig":"33"},{"size":1056,"mtime":1609602091469,"results":"37","hashOfConfig":"33"},{"size":5802,"mtime":1610477083846,"results":"38","hashOfConfig":"33"},{"size":550,"mtime":1609956869771,"results":"39","hashOfConfig":"33"},{"size":1038,"mtime":1610482539677,"results":"40","hashOfConfig":"33"},{"size":254,"mtime":1606839022073,"results":"41","hashOfConfig":"33"},{"size":6597,"mtime":1610477077080,"results":"42","hashOfConfig":"33"},{"size":7227,"mtime":1609954248323,"results":"43","hashOfConfig":"33"},{"size":2368,"mtime":1610476520918,"results":"44","hashOfConfig":"33"},{"size":6882,"mtime":1609962940532,"results":"45","hashOfConfig":"33"},{"size":1355,"mtime":1606055005285,"results":"46","hashOfConfig":"33"},{"size":3477,"mtime":1607356283062,"results":"47","hashOfConfig":"33"},{"size":3093,"mtime":1609963567892,"results":"48","hashOfConfig":"33"},{"size":1025,"mtime":1607121577440,"results":"49","hashOfConfig":"33"},{"size":8456,"mtime":1609704151763,"results":"50","hashOfConfig":"33"},{"size":654,"mtime":1607356519855,"results":"51","hashOfConfig":"33"},{"size":2547,"mtime":1607125208461,"results":"52","hashOfConfig":"33"},{"size":706,"mtime":1609956783300,"results":"53","hashOfConfig":"33"},{"size":199,"mtime":1609611765691,"results":"54","hashOfConfig":"33"},{"size":700,"mtime":1610479468060,"results":"55","hashOfConfig":"33"},{"size":4695,"mtime":1609963032569,"results":"56","hashOfConfig":"33"},{"size":2164,"mtime":1610047858387,"results":"57","hashOfConfig":"33"},{"size":1623,"mtime":1610477119669,"results":"58","hashOfConfig":"33"},{"size":5938,"mtime":1610475627441,"results":"59","hashOfConfig":"33"},{"size":2040,"mtime":1610390732876,"results":"60","hashOfConfig":"33"},{"size":5787,"mtime":1610392346645,"results":"61","hashOfConfig":"33"},{"size":5464,"mtime":1610390260124,"results":"62","hashOfConfig":"33"},{"size":6538,"mtime":1610482680406,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"qqjf6h",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\index.tsx",[],["131","132"],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\configureClient.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\DataContainer.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\behaviour\\usePersistedState.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\ChampsQuery.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\App.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SplashScreen.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\types.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\SelectChampMutation.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\behaviour\\useRoleState.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SplashImage.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\EmptyLane.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\ConfirmedPanel.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\HextechChestAvailable.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SingleBarChart.tsx",[],["133","134"],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\BuildPreview.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\DifficultyBar.tsx",[],["135","136"],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\SkinSelect\\SkinSelect.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\util\\index.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\SkinSelect\\Skin.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\theme.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\ChampCountFragment.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\gql\\ChampFragment.ts",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\scores\\Scores.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\scores\\CircleScore.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ConfirmedPanel\\scores\\ScoreHint.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\ModalButton.tsx",["137"],"import React, { forwardRef, useCallback, useEffect, useImperativeHandle, useLayoutEffect, useRef, useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport classNames from 'classnames'\r\nimport { Backdrop } from '@material-ui/core'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\n\r\ntype WrapperProps = {\r\n    show: boolean, \r\n    shouldHide: boolean, \r\n    confirmed?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n    transition: 0.2s all ease-in-out;\r\n\r\n    color: ${p => p.theme.color.primary};\r\n\r\n    .hintAndErrorSection {\r\n        height: 1.5em;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n\r\n\r\n\r\n    .visibleWrapper {\r\n        background: ${p => p.theme.color.background};\r\n        border-radius: 4px;\r\n        position: relative;\r\n        padding: ${p => p.theme.size.m};\r\n        border: 1px solid ${p => p.theme.color.primary};\r\n        position: fixed;\r\n        top: 0;\r\n        visibility: hidden;\r\n        left: 0;\r\n        z-index: 99;\r\n        transition: 0.3s all ease;\r\n        \r\n\r\n        .close {\r\n            position: absolute;\r\n            right: 12px;\r\n            top: 12px;\r\n            cursor: pointer;\r\n            svg {\r\n                color: ${p => p.theme.color.primary};\r\n            }\r\n        }\r\n\r\n        .content-wrapper {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        select, input {\r\n            border: 1px solid ${p => p.theme.color.primary};\r\n            background: transparent;\r\n            outline: none;\r\n            color: ${p => p.theme.color.primary};\r\n            padding: 0 ${p => p.theme.size.m};\r\n            box-sizing: border-box;\r\n            height: 45px;\r\n        }\r\n\r\n        select {\r\n            margin-left: ${p => p.theme.size.s};\r\n        }\r\n\r\n        .search-button {\r\n            box-sizing: border-box;\r\n            margin-left: ${p => p.theme.size.m};\r\n            padding: ${p => p.theme.size.m};\r\n            height: 45px;\r\n            border: 1px solid ${p => p.theme.color.primary};\r\n        }\r\n    }\r\n\r\n    .expander {\r\n        border-radius: 2px;\r\n        background: ${p => p.theme.color.background};\r\n        padding: ${p => p.theme.size.m};\r\n        border: 1px solid ${p => p.theme.color.primary};\r\n        ${p => p.show ? css`\r\n            opacity: 0;\r\n        `: css`\r\n            opacity: 1;\r\n        `}\r\n\r\n        .confirmed {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n    }\r\n`\r\n\r\nexport type ModalButtonProps = {\r\n    renderButton: React.ReactNode\r\n    renderModal: React.ReactNode\r\n    hide?: boolean\r\n    onVisibleChange?: (visible: boolean) => void\r\n}\r\n\r\nexport type ModalButtonApi = {\r\n    hide: () => void\r\n    show: () => void\r\n    setPreventHide: (prevent: boolean) => void\r\n}\r\n\r\nconst ModalButton:React.FC<ModalButtonProps> = forwardRef<ModalButtonApi, ModalButtonProps>((props, ref) => {\r\n    const { renderButton: RenderButton, hide: shouldHide, renderModal: RenderModal, onVisibleChange } = props\r\n    const [visible, setShow] = useState(false)\r\n    const [preventHide, setPreventHide] = useState(false)\r\n    const buttonRef = useRef<HTMLButtonElement>(null)\r\n    const modalRef = useRef<HTMLDivElement>(null)\r\n    const [modalStyle, setModalStyle] = useState<React.CSSProperties>({})\r\n\r\n    const modalResizeObserverRef = useRef<any>(null)\r\n\r\n    useEffect(() => {\r\n        onVisibleChange?.(visible)\r\n\r\n    }, [visible])\r\n\r\n    useLayoutEffect(() => {\r\n        const getYTranslate = (buttonRect: DOMRect, modalRect: DOMRect) => {\r\n            const windowHeight = window.innerHeight\r\n            return (windowHeight / 2) - (modalRect.height / 2)\r\n        }\r\n\r\n        const call = () => {\r\n            if(modalRef.current && buttonRef.current) {\r\n                const modalRect = modalRef.current.getBoundingClientRect()\r\n                const buttonRect = buttonRef.current.getBoundingClientRect()\r\n                if(visible) {\r\n                    const yTranslate = getYTranslate(buttonRect, modalRect)\r\n                    const xTranslate = (window.innerWidth / 2) - modalRect.width / 2\r\n                    setModalStyle({\r\n                        transform: `translateY(${yTranslate}px) translateX(${xTranslate}px)`,\r\n                        visibility: 'visible'\r\n                    })\r\n                } else if(!visible) {\r\n                    const buttonRect = buttonRef.current.getBoundingClientRect()\r\n                    setModalStyle({\r\n                        transform: `translateX(${buttonRect.left - (modalRect.width / 2) + buttonRect.width / 2}px) translateY(-${buttonRect.top + modalRect.height}px) `,\r\n                        visibility: 'hidden'\r\n                    })\r\n                }\r\n            }\r\n        }   \r\n        modalResizeObserverRef.current = new ResizeObserver(call)\r\n\r\n        if(modalRef.current) {\r\n            modalResizeObserverRef.current.observe(modalRef.current)\r\n        }\r\n\r\n        window.addEventListener('resize', call)\r\n        call()\r\n        return () => {\r\n            window.removeEventListener('resize', call)\r\n        }\r\n    }, [visible]) \r\n\r\n    const hide = useCallback(() => {\r\n       !preventHide && setShow(false)\r\n    }, [preventHide])\r\n    const show = useCallback(() => {\r\n        setShow(true)\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        show,\r\n        hide,\r\n        setPreventHide\r\n    }), [show, hide, setPreventHide])\r\n\r\n    return <>\r\n    {visible && <Backdrop open style={{ zIndex: 9 }} onClick={() => !preventHide && hide()} />}\r\n    <Wrapper show={visible} shouldHide={!!shouldHide} className={classNames('modal-button', { hidden: !visible })}>\r\n        <button className='expander' ref={buttonRef} onClick={show}>{RenderButton}</button>\r\n        <div className='visibleWrapper' style={modalStyle} ref={modalRef}> \r\n            {RenderModal}\r\n        </div>\r\n    </Wrapper></>\r\n})\r\n\r\nexport default ModalButton\r\n","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SummonerProfile\\SummonerProfile.tsx",["138"],"import React, { useCallback, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport ModalButton, { ModalButtonApi } from '../ModalButton'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Profile from './Profile';\r\nimport LoginSummonerName from './LoginSummonerName';\r\nimport { SummonerInformation } from '../../App';\r\n\r\ntype WrapperProps = {}\r\n\r\nconst Wrapper = styled.div<WrapperProps>``\r\n\r\nexport type SummonerProfileProps = {\r\n    confirmedSummoner?: SummonerInformation | null\r\n    hide: boolean\r\n    onConfirm: (summonerInformation: SummonerInformation | null) => void\r\n}\r\n\r\nconst SummonerProfile:React.FC<SummonerProfileProps> = props => {\r\n    const { confirmedSummoner, hide: shouldHide, onConfirm } = props\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const modalButtonRef = useRef<ModalButtonApi>(null)\r\n    const hasEnteredName = !!confirmedSummoner?.name\r\n\r\n    const hide = useCallback(() => {\r\n        modalButtonRef.current?.hide()\r\n    }, [])\r\n\r\n    const setPreventHide = useCallback((prevent) => {\r\n        modalButtonRef.current?.setPreventHide(prevent)\r\n    }, [])\r\n\r\n    const handleResetConfirmedSummoner = useCallback(() => {\r\n        onConfirm(null)\r\n        hide()\r\n    }, [hide, onConfirm])\r\n\r\n    const handleConfirm: SummonerProfileProps['onConfirm'] = useCallback((summoner) => {\r\n        hide()\r\n        onConfirm(summoner)\r\n    },[onConfirm, hide]) \r\n\r\n    return <Wrapper>\r\n        <ModalButton\r\n            hide={shouldHide}\r\n            onVisibleChange={setVisible}\r\n            renderModal={confirmedSummoner ? <Profile hide={hide} resetConfirmedSummoner={handleResetConfirmedSummoner} confirmedSummoner={confirmedSummoner}  /> : <LoginSummonerName setPreventHide={setPreventHide} onConfirm={handleConfirm} hide={hide} />}\r\n            renderButton={hasEnteredName ? <div className='confirmed'><PersonIcon /><span>{confirmedSummoner?.name}</span></div> : <span>Enter Summoner Name</span>}\r\n        />\r\n    </Wrapper>\r\n}\r\n\r\nexport default SummonerProfile\r\n","C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SummonerProfile\\Profile.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\SummonerProfile\\LoginSummonerName.tsx",[],"C:\\Users\\marvi\\Documents\\Projekte\\autofill-v3\\src\\components\\Filter.tsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":122,"column":8,"nodeType":"149","endLine":122,"endColumn":17,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":21,"column":12,"nodeType":"153","messageId":"154","endLine":21,"endColumn":19},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],["155"],["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onVisibleChange'. Either include it or remove the dependency array.","ArrayExpression",["157"],"@typescript-eslint/no-unused-vars","'visible' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [onVisibleChange, visible]",{"range":"160","text":"161"},[3435,3444],"[onVisibleChange, visible]"]